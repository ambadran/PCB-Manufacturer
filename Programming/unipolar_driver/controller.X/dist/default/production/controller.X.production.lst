

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Dec 13 15:10:29 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	functab,global,class=ENTRY,delta=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x5E,2
    26  0000                     
    27                           ; Version 2.40
    28                           ; Generated 06/12/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC12F675 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0019                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  008C                     	;# 
    81  008E                     	;# 
    82  0090                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0096                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009A                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  009F                     	;# 
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0019                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  008C                     	;# 
   113  008E                     	;# 
   114  0090                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0096                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126                           
   127                           	psect	idataBANK0
   128  00FD                     __pidataBANK0:
   129                           
   130                           ;initializer for _func_ptr
   131  00FD  3402               	retlw	low (fp__even_pins_set_clear-i1fpbase)
   132  00FE  3403               	retlw	low (fp__even_pins_clear_set-i1fpbase)
   133  00FF  3401               	retlw	low (fp__odd_pins_set_clear-i1fpbase)
   134  0100  3404               	retlw	low (fp__odd_pins_clear_set-i1fpbase)
   135  0101  3404               	retlw	low (fp__odd_pins_clear_set-i1fpbase)
   136  0102  3401               	retlw	low (fp__odd_pins_set_clear-i1fpbase)
   137  0103  3403               	retlw	low (fp__even_pins_clear_set-i1fpbase)
   138  0104  3402               	retlw	low (fp__even_pins_set_clear-i1fpbase)
   139                           
   140                           ;initializer for _target_OF_num
   141  0105  3401               	retlw	1
   142  0106  3400               	retlw	0
   143  000E                     _TMR1	set	14
   144  0010                     _T1CONbits	set	16
   145  0019                     _CMCONbits	set	25
   146  0060                     _TMR1IF	set	96
   147  002B                     _GPIO3	set	43
   148  005E                     _PEIE	set	94
   149  005F                     _GIE	set	95
   150  0081                     _TMR1CS	set	129
   151  0083                     _T1OSCEN	set	131
   152  0086                     _TMR1GE	set	134
   153  00F8                     _ADON	set	248
   154  002D                     _GPIO5	set	45
   155  0080                     _TMR1ON	set	128
   156  002A                     _GPIO2	set	42
   157  0028                     _GPIO0	set	40
   158  002C                     _GPIO4	set	44
   159  0029                     _GPIO1	set	41
   160  009F                     _ANSELbits	set	159
   161  0460                     _TMR1IE	set	1120
   162  042D                     _TRISIO5	set	1069
   163  042C                     _TRISIO4	set	1068
   164  042B                     _TRISIO3	set	1067
   165  042A                     _TRISIO2	set	1066
   166  0429                     _TRISIO1	set	1065
   167  0428                     _TRISIO0	set	1064
   168                           
   169                           	psect	cinit
   170  0010                     start_initialization:	
   171                           ; #config settings
   172                           
   173  0010                     __initialization:
   174                           
   175                           ; Initialize objects allocated to BANK0
   176  0010  20FD               	fcall	__pidataBANK0	;fetch initializer
   177  0011  00B0               	movwf	__pdataBANK0& (0+127)
   178  0012  20FE               	fcall	__pidataBANK0+1	;fetch initializer
   179  0013  00B1               	movwf	(__pdataBANK0+1)& (0+127)
   180  0014  20FF               	fcall	__pidataBANK0+2	;fetch initializer
   181  0015  00B2               	movwf	(__pdataBANK0+2)& (0+127)
   182  0016  2100               	fcall	__pidataBANK0+3	;fetch initializer
   183  0017  00B3               	movwf	(__pdataBANK0+3)& (0+127)
   184  0018  2101               	fcall	__pidataBANK0+4	;fetch initializer
   185  0019  00B4               	movwf	(__pdataBANK0+4)& (0+127)
   186  001A  2102               	fcall	__pidataBANK0+5	;fetch initializer
   187  001B  00B5               	movwf	(__pdataBANK0+5)& (0+127)
   188  001C  2103               	fcall	__pidataBANK0+6	;fetch initializer
   189  001D  00B6               	movwf	(__pdataBANK0+6)& (0+127)
   190  001E  2104               	fcall	__pidataBANK0+7	;fetch initializer
   191  001F  00B7               	movwf	(__pdataBANK0+7)& (0+127)
   192  0020  2105               	fcall	__pidataBANK0+8	;fetch initializer
   193  0021  00B8               	movwf	(__pdataBANK0+8)& (0+127)
   194  0022  2106               	fcall	__pidataBANK0+9	;fetch initializer
   195  0023  00B9               	movwf	(__pdataBANK0+9)& (0+127)
   196                           
   197                           ; Clear objects allocated to BANK0
   198  0024  01BA               	clrf	__pbssBANK0& (0+127)
   199  0025  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   200  0026  01BC               	clrf	(__pbssBANK0+2)& (0+127)
   201  0027  01BD               	clrf	(__pbssBANK0+3)& (0+127)
   202  0028  01BE               	clrf	(__pbssBANK0+4)& (0+127)
   203  0029  01BF               	clrf	(__pbssBANK0+5)& (0+127)
   204  002A  01C0               	clrf	(__pbssBANK0+6)& (0+127)
   205  002B  01C1               	clrf	(__pbssBANK0+7)& (0+127)
   206  002C                     end_of_initialization:	
   207                           ;End of C runtime variable initialization code
   208                           
   209  002C                     __end_of__initialization:
   210  002C  0183               	clrf	3
   211  002D  2890               	ljmp	_main	;jump to C main() function
   212                           
   213                           	psect	bssBANK0
   214  003A                     __pbssBANK0:
   215  003A                     _current_position:
   216  003A                     	ds	2
   217  003C                     _OF_num_TMR1:
   218  003C                     	ds	2
   219  003E                     _tmp_set_clear_sequence:
   220  003E                     	ds	1
   221  003F                     _set_clear_sequence:
   222  003F                     	ds	1
   223  0040                     _pair_select:
   224  0040                     	ds	1
   225  0041                     _CW_CCW_select:
   226  0041                     	ds	1
   227                           
   228                           	psect	dataBANK0
   229  0030                     __pdataBANK0:
   230  0030                     _func_ptr:
   231  0030                     	ds	8
   232  0038                     _target_OF_num:
   233  0038                     	ds	2
   234                           
   235                           	psect	cstackCOMMON
   236  0000                     __pcstackCOMMON:
   237  0000                     ??_retrieve_current_position:
   238  0000                     ??_update_current_position:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0000                     ??_even_pins_set_clear:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0000                     ??_even_pins_clear_set:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0000                     ??_odd_pins_set_clear:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0000                     ??_odd_pins_clear_set:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0000                     ??_reset_all_pins:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0000                     ??i1_reset_all_pins:	
   257                           ; 1 bytes @ 0x0
   258                           
   259                           
   260                           	psect	cstackBANK0
   261  0020                     __pcstackBANK0:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0020                     ?_retrieve_current_position:
   265  0020                     ?_even_pins_set_clear:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0020                     ?_even_pins_clear_set:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0020                     ?_odd_pins_set_clear:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0020                     ?_odd_pins_clear_set:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0020                     ?_start_timer:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0020                     ?_reset_all_pins:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0020                     ?_main:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0020                     ?_ISR:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0020                     ??_ISR:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0020                     ?i1_reset_all_pins:	
   293                           ; 1 bytes @ 0x0
   294                           
   295                           
   296                           ; 1 bytes @ 0x0
   297  0020                     	ds	9
   298  0029                     ?_update_current_position:
   299  0029                     update_current_position@value:	
   300                           ; 1 bytes @ 0x9
   301                           
   302                           
   303                           ; 2 bytes @ 0x9
   304  0029                     	ds	2
   305  002B                     ??_start_timer:
   306                           
   307                           ; 1 bytes @ 0xB
   308  002B                     	ds	2
   309  002D                     ??_main:
   310                           
   311                           ; 1 bytes @ 0xD
   312  002D                     	ds	3
   313                           
   314                           	psect	maintext
   315  0090                     __pmaintext:	
   316 ;;
   317 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   318 ;;
   319 ;; *************** function _main *****************
   320 ;; Defined at:
   321 ;;		line 129 in file "main.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, status,2, status,0, pclath, cstack
   330 ;; Tracked objects:
   331 ;;		On entry : B00/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMMON   BANK0
   335 ;;      Params:         0       0
   336 ;;      Locals:         0       0
   337 ;;      Temps:          0       3
   338 ;;      Totals:         0       3
   339 ;;Total ram usage:        3 bytes
   340 ;; Hardware stack levels required when called: 4
   341 ;; This function calls:
   342 ;;		_reset_all_pins
   343 ;;		_retrieve_current_position
   344 ;;		_start_timer
   345 ;; This function is called by:
   346 ;;		Startup code after reset
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350  0090                     _main:	
   351                           ;psect for function _main
   352                           
   353  0090                     l825:	
   354                           ;incstack = 0
   355                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   356                           
   357                           
   358                           ;main.c: 132:     TRISIO0 = 0;
   359  0090  1683               	bsf	3,5	;RP0=1, select bank1
   360  0091  1005               	bcf	5,0	;volatile
   361                           
   362                           ;main.c: 133:     TRISIO1 = 0;
   363  0092  1085               	bcf	5,1	;volatile
   364                           
   365                           ;main.c: 134:     TRISIO2 = 0;
   366  0093  1105               	bcf	5,2	;volatile
   367                           
   368                           ;main.c: 135:     TRISIO3 = 1;
   369  0094  1585               	bsf	5,3	;volatile
   370                           
   371                           ;main.c: 136:     TRISIO4 = 0;
   372  0095  1205               	bcf	5,4	;volatile
   373                           
   374                           ;main.c: 139:     TRISIO5 = 0;
   375  0096  1285               	bcf	5,5	;volatile
   376                           
   377                           ;main.c: 140:     GPIO5 = 0;
   378  0097  1283               	bcf	3,5	;RP0=0, select bank0
   379  0098  1285               	bcf	5,5	;volatile
   380  0099                     l827:
   381                           
   382                           ;main.c: 143:     CMCONbits.CM = 0b111;
   383  0099  3007               	movlw	7
   384  009A  0499               	iorwf	25,f	;volatile
   385  009B                     l829:
   386                           
   387                           ;main.c: 146:     ADON = 0;
   388  009B  101F               	bcf	31,0	;volatile
   389                           
   390                           ;main.c: 147:     ANSELbits.ANS = 0b0000;
   391  009C  30F0               	movlw	-16
   392  009D  1683               	bsf	3,5	;RP0=1, select bank1
   393  009E  059F               	andwf	31,f	;volatile
   394  009F                     l831:
   395                           
   396                           ;main.c: 150:     TMR1GE = 0;
   397  009F  1283               	bcf	3,5	;RP0=0, select bank0
   398  00A0  1310               	bcf	16,6	;volatile
   399                           
   400                           ;main.c: 151:     T1CONbits.T1CKPS = 0b00;
   401  00A1  30CF               	movlw	-49
   402  00A2  0590               	andwf	16,f	;volatile
   403  00A3                     l833:
   404                           
   405                           ;main.c: 152:     T1OSCEN = 0;
   406  00A3  1190               	bcf	16,3	;volatile
   407  00A4                     l835:
   408                           
   409                           ;main.c: 154:     TMR1CS = 0;
   410  00A4  1090               	bcf	16,1	;volatile
   411  00A5                     l837:
   412                           
   413                           ;main.c: 155:     TMR1ON = 0;
   414  00A5  1010               	bcf	16,0	;volatile
   415  00A6                     l839:
   416                           
   417                           ;main.c: 156:     TMR1 = 59582;
   418  00A6  30E8               	movlw	232
   419  00A7  008F               	movwf	15	;volatile
   420  00A8  30BE               	movlw	190
   421  00A9  008E               	movwf	14	;volatile
   422  00AA                     l841:
   423                           
   424                           ;main.c: 159:     GIE = 1;
   425  00AA  178B               	bsf	11,7	;volatile
   426  00AB                     l843:
   427                           
   428                           ;main.c: 160:     PEIE = 1;
   429  00AB  170B               	bsf	11,6	;volatile
   430  00AC                     l845:
   431                           
   432                           ;main.c: 161:     TMR1IE = 1;
   433  00AC  1683               	bsf	3,5	;RP0=1, select bank1
   434  00AD  140C               	bsf	12,0	;volatile
   435  00AE                     l847:
   436                           
   437                           ;main.c: 164:     reset_all_pins();
   438  00AE  210D               	fcall	_reset_all_pins
   439  00AF                     l849:
   440                           
   441                           ;main.c: 167:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   442  00AF  3006               	movlw	6
   443  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   444  00B1  00AF               	movwf	??_main+2
   445  00B2  3013               	movlw	19
   446  00B3  00AE               	movwf	??_main+1
   447  00B4  30AD               	movlw	173
   448  00B5  00AD               	movwf	??_main
   449  00B6                     u197:
   450  00B6  0BAD               	decfsz	??_main,f
   451  00B7  28B6               	goto	u197
   452  00B8  0BAE               	decfsz	??_main+1,f
   453  00B9  28B6               	goto	u197
   454  00BA  0BAF               	decfsz	??_main+2,f
   455  00BB  28B6               	goto	u197
   456  00BC  28BD               	nop2
   457  00BD                     l851:
   458                           
   459                           ;main.c: 168:     retrieve_current_position();
   460  00BD  2119               	fcall	_retrieve_current_position
   461  00BE                     l853:
   462                           
   463                           ;main.c: 173:         if(GPIO3 != CW_CCW_select) {
   464  00BE  3000               	movlw	0
   465  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   466  00C0  1985               	btfsc	5,3	;volatile
   467  00C1  3001               	movlw	1
   468  00C2  0641               	xorwf	_CW_CCW_select,w
   469  00C3  1903               	skipnz
   470  00C4  28C6               	goto	u111
   471  00C5  28C7               	goto	u110
   472  00C6                     u111:
   473  00C6  28BE               	goto	l853
   474  00C7                     u110:
   475  00C7                     l855:
   476                           
   477                           ;main.c: 174:             CW_CCW_select = GPIO3;
   478  00C7  3000               	movlw	0
   479  00C8  1985               	btfsc	5,3	;volatile
   480  00C9  3001               	movlw	1
   481  00CA  00C1               	movwf	_CW_CCW_select
   482  00CB                     l857:
   483                           
   484                           ;main.c: 175:             start_timer();
   485  00CB  20CE               	fcall	_start_timer
   486  00CC  28BE               	goto	l853
   487  00CD  280F               	ljmp	start
   488  00CE                     __end_of_main:
   489                           
   490                           	psect	text1
   491  00CE                     __ptext1:	
   492 ;; *************** function _start_timer *****************
   493 ;; Defined at:
   494 ;;		line 94 in file "main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, status,2, status,0, pclath, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMMON   BANK0
   508 ;;      Params:         0       0
   509 ;;      Locals:         0       0
   510 ;;      Temps:          0       2
   511 ;;      Totals:         0       2
   512 ;;Total ram usage:        2 bytes
   513 ;; Hardware stack levels used: 1
   514 ;; Hardware stack levels required when called: 3
   515 ;; This function calls:
   516 ;;		_update_current_position
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522  00CE                     _start_timer:	
   523                           ;psect for function _start_timer
   524                           
   525  00CE                     l807:	
   526                           ;incstack = 0
   527                           ; Regs used in _start_timer: [wreg+status,2+status,0+pclath+cstack]
   528                           
   529                           
   530                           ;main.c: 96:     if (CW_CCW_select) {
   531  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   532  00CF  0841               	movf	_CW_CCW_select,w
   533  00D0  1903               	btfsc	3,2
   534  00D1  28D3               	goto	u101
   535  00D2  28D4               	goto	u100
   536  00D3                     u101:
   537  00D3  28EB               	goto	l813
   538  00D4                     u100:
   539  00D4                     l809:
   540                           
   541                           ;main.c: 98:         update_current_position(current_position - OF_num_TMR1);
   542  00D4  083C               	movf	_OF_num_TMR1,w
   543  00D5  023A               	subwf	_current_position,w
   544  00D6  00A9               	movwf	update_current_position@value
   545  00D7  083D               	movf	_OF_num_TMR1+1,w
   546  00D8  1C03               	skipc
   547  00D9  0A3D               	incf	_OF_num_TMR1+1,w
   548  00DA  023B               	subwf	_current_position+1,w
   549  00DB  00AA               	movwf	update_current_position@value+1
   550  00DC  2107               	fcall	_update_current_position
   551  00DD                     l811:
   552                           
   553                           ;main.c: 100:         target_OF_num = 790 - current_position;
   554  00DD  3016               	movlw	22
   555  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   556  00DF  00AB               	movwf	??_start_timer
   557  00E0  3003               	movlw	3
   558  00E1  00AC               	movwf	??_start_timer+1
   559  00E2  083A               	movf	_current_position,w
   560  00E3  022B               	subwf	??_start_timer,w
   561  00E4  00B8               	movwf	_target_OF_num
   562  00E5  083B               	movf	_current_position+1,w
   563  00E6  1C03               	skipc
   564  00E7  0A3B               	incf	_current_position+1,w
   565  00E8  022C               	subwf	??_start_timer+1,w
   566  00E9  00B9               	movwf	_target_OF_num+1
   567                           
   568                           ;main.c: 102:     } else {
   569  00EA  28F9               	goto	l817
   570  00EB                     l813:
   571                           
   572                           ;main.c: 104:         update_current_position(current_position + OF_num_TMR1);
   573  00EB  083C               	movf	_OF_num_TMR1,w
   574  00EC  073A               	addwf	_current_position,w
   575  00ED  00A9               	movwf	update_current_position@value
   576  00EE  083D               	movf	_OF_num_TMR1+1,w
   577  00EF  1803               	skipnc
   578  00F0  0A3D               	incf	_OF_num_TMR1+1,w
   579  00F1  073B               	addwf	_current_position+1,w
   580  00F2  00AA               	movwf	update_current_position@value+1
   581  00F3  2107               	fcall	_update_current_position
   582  00F4                     l815:
   583                           
   584                           ;main.c: 106:         target_OF_num = current_position;
   585  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   586  00F5  083B               	movf	_current_position+1,w
   587  00F6  00B9               	movwf	_target_OF_num+1
   588  00F7  083A               	movf	_current_position,w
   589  00F8  00B8               	movwf	_target_OF_num
   590  00F9                     l817:
   591                           
   592                           ;main.c: 111:     OF_num_TMR1 = 0;
   593  00F9  01BC               	clrf	_OF_num_TMR1
   594  00FA  01BD               	clrf	_OF_num_TMR1+1
   595  00FB                     l819:
   596                           
   597                           ;main.c: 114:     TMR1ON = 1;
   598  00FB  1410               	bsf	16,0	;volatile
   599  00FC                     l91:
   600  00FC  0008               	return
   601  00FD                     __end_of_start_timer:
   602                           
   603                           	psect	text2
   604  0107                     __ptext2:	
   605 ;; *************** function _update_current_position *****************
   606 ;; Defined at:
   607 ;;		line 52 in file "main.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;  value           2    9[BANK0 ] int 
   610 ;; Auto vars:     Size  Location     Type
   611 ;;		None
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMMON   BANK0
   621 ;;      Params:         0       2
   622 ;;      Locals:         0       0
   623 ;;      Temps:          0       0
   624 ;;      Totals:         0       2
   625 ;;Total ram usage:        2 bytes
   626 ;; Hardware stack levels used: 1
   627 ;; Hardware stack levels required when called: 2
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		_start_timer
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635  0107                     _update_current_position:	
   636                           ;psect for function _update_current_position
   637                           
   638  0107                     l795:	
   639                           ;incstack = 0
   640                           ; Regs used in _update_current_position: [wreg]
   641                           
   642                           
   643                           ;main.c: 54:     current_position = value;
   644  0107  1283               	bcf	3,5	;RP0=0, select bank0
   645  0108  082A               	movf	update_current_position@value+1,w
   646  0109  00BB               	movwf	_current_position+1
   647  010A  0829               	movf	update_current_position@value,w
   648  010B  00BA               	movwf	_current_position
   649  010C                     l72:
   650  010C  0008               	return
   651  010D                     __end_of_update_current_position:
   652                           
   653                           	psect	text3
   654  0119                     __ptext3:	
   655 ;; *************** function _retrieve_current_position *****************
   656 ;; Defined at:
   657 ;;		line 47 in file "main.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		status,2
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0
   671 ;;      Params:         0       0
   672 ;;      Locals:         0       0
   673 ;;      Temps:          0       0
   674 ;;      Totals:         0       0
   675 ;;Total ram usage:        0 bytes
   676 ;; Hardware stack levels used: 1
   677 ;; Hardware stack levels required when called: 2
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685  0119                     _retrieve_current_position:	
   686                           ;psect for function _retrieve_current_position
   687                           
   688  0119                     l797:	
   689                           ;incstack = 0
   690                           ; Regs used in _retrieve_current_position: [status,2]
   691                           
   692                           
   693                           ;main.c: 49:     current_position = 0;
   694  0119  1283               	bcf	3,5	;RP0=0, select bank0
   695  011A  01BA               	clrf	_current_position
   696  011B  01BB               	clrf	_current_position+1
   697  011C                     l69:
   698  011C  0008               	return
   699  011D                     __end_of_retrieve_current_position:
   700                           
   701                           	psect	text4
   702  010D                     __ptext4:	
   703 ;; *************** function _reset_all_pins *****************
   704 ;; Defined at:
   705 ;;		line 121 in file "main.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;		None
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		None
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMMON   BANK0
   719 ;;      Params:         0       0
   720 ;;      Locals:         0       0
   721 ;;      Temps:          0       0
   722 ;;      Totals:         0       0
   723 ;;Total ram usage:        0 bytes
   724 ;; Hardware stack levels used: 1
   725 ;; Hardware stack levels required when called: 2
   726 ;; This function calls:
   727 ;;		Nothing
   728 ;; This function is called by:
   729 ;;		_main
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733  010D                     _reset_all_pins:	
   734                           ;psect for function _reset_all_pins
   735                           
   736  010D                     l821:	
   737                           ;incstack = 0
   738                           ; Regs used in _reset_all_pins: []
   739                           
   740                           
   741                           ;main.c: 122:     GPIO0 = 0;
   742  010D  1283               	bcf	3,5	;RP0=0, select bank0
   743  010E  1005               	bcf	5,0	;volatile
   744                           
   745                           ;main.c: 123:     GPIO1 = 0;
   746  010F  1085               	bcf	5,1	;volatile
   747                           
   748                           ;main.c: 124:     GPIO2 = 0;
   749  0110  1105               	bcf	5,2	;volatile
   750                           
   751                           ;main.c: 125:     GPIO4 = 0;
   752  0111  1205               	bcf	5,4	;volatile
   753  0112                     l97:
   754  0112  0008               	return
   755  0113                     __end_of_reset_all_pins:
   756                           
   757                           	psect	text5
   758  0039                     __ptext5:	
   759 ;; *************** function _ISR *****************
   760 ;; Defined at:
   761 ;;		line 184 in file "main.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0
   775 ;;      Params:         0       0
   776 ;;      Locals:         0       0
   777 ;;      Temps:          0       9
   778 ;;      Totals:         0       9
   779 ;;Total ram usage:        9 bytes
   780 ;; Hardware stack levels used: 1
   781 ;; Hardware stack levels required when called: 1
   782 ;; This function calls:
   783 ;;		_even_pins_clear_set
   784 ;;		_even_pins_set_clear
   785 ;;		_odd_pins_clear_set
   786 ;;		_odd_pins_set_clear
   787 ;;		i1_reset_all_pins
   788 ;; This function is called by:
   789 ;;		Interrupt level 1
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793  0039                     _ISR:	
   794                           ;psect for function _ISR
   795                           
   796  0039                     i1l859:
   797                           
   798                           ;main.c: 186:     if(TMR1IF) {
   799  0039  1C0C               	btfss	12,0	;volatile
   800  003A  283C               	goto	u12_21
   801  003B  283D               	goto	u12_20
   802  003C                     u12_21:
   803  003C  2886               	goto	i1l113
   804  003D                     u12_20:
   805  003D                     i1l861:
   806                           
   807                           ;main.c: 192:         TMR1 = 59582;
   808  003D  30E8               	movlw	232
   809  003E  008F               	movwf	15	;volatile
   810  003F  30BE               	movlw	190
   811  0040  008E               	movwf	14	;volatile
   812  0041                     i1l863:
   813                           
   814                           ;main.c: 194:         OF_num_TMR1++;
   815  0041  3001               	movlw	1
   816  0042  07BC               	addwf	_OF_num_TMR1,f
   817  0043  1803               	skipnc
   818  0044  0ABD               	incf	_OF_num_TMR1+1,f
   819  0045  3000               	movlw	0
   820  0046  07BD               	addwf	_OF_num_TMR1+1,f
   821  0047                     i1l865:
   822                           
   823                           ;main.c: 198:         pair_select = !pair_select;
   824  0047  0840               	movf	_pair_select,w
   825  0048  1903               	btfsc	3,2
   826  0049  284B               	goto	u13_21
   827  004A  284D               	goto	u13_20
   828  004B                     u13_21:
   829  004B  3001               	movlw	1
   830  004C  284E               	goto	u14_20
   831  004D                     u13_20:
   832  004D  3000               	movlw	0
   833  004E                     u14_20:
   834  004E  00A0               	movwf	??_ISR
   835  004F  0820               	movf	??_ISR,w
   836  0050  00C0               	movwf	_pair_select
   837  0051                     i1l867:
   838                           
   839                           ;main.c: 200:         set_clear_sequence ^= tmp_set_clear_sequence;
   840  0051  083E               	movf	_tmp_set_clear_sequence,w
   841  0052  00A0               	movwf	??_ISR
   842  0053  0820               	movf	??_ISR,w
   843  0054  06BF               	xorwf	_set_clear_sequence,f
   844  0055                     i1l869:
   845                           
   846                           ;main.c: 201:         tmp_set_clear_sequence = !tmp_set_clear_sequence;
   847  0055  083E               	movf	_tmp_set_clear_sequence,w
   848  0056  1903               	btfsc	3,2
   849  0057  2859               	goto	u15_21
   850  0058  285B               	goto	u15_20
   851  0059                     u15_21:
   852  0059  3001               	movlw	1
   853  005A  285C               	goto	u16_20
   854  005B                     u15_20:
   855  005B  3000               	movlw	0
   856  005C                     u16_20:
   857  005C  00A0               	movwf	??_ISR
   858  005D  0820               	movf	??_ISR,w
   859  005E  00BE               	movwf	_tmp_set_clear_sequence
   860  005F                     i1l871:
   861                           
   862                           ;main.c: 204:         (*func_ptr[CW_CCW_select][pair_select][set_clear_sequence])();
   863  005F  0841               	movf	_CW_CCW_select,w
   864  0060  00A0               	movwf	??_ISR
   865  0061  3002               	movlw	2
   866  0062                     u17_25:
   867  0062  1003               	clrc
   868  0063  0DA0               	rlf	??_ISR,f
   869  0064  3EFF               	addlw	-1
   870  0065  1D03               	skipz
   871  0066  2862               	goto	u17_25
   872  0067  3030               	movlw	(low (_func_ptr| 0))& (0+255)
   873  0068  0720               	addwf	??_ISR,w
   874  0069  00A1               	movwf	??_ISR+1
   875  006A  0840               	movf	_pair_select,w
   876  006B  00A2               	movwf	??_ISR+2
   877  006C  0722               	addwf	??_ISR+2,w
   878  006D  0721               	addwf	??_ISR+1,w
   879  006E  00A3               	movwf	??_ISR+3
   880  006F  083F               	movf	_set_clear_sequence,w
   881  0070  0723               	addwf	??_ISR+3,w
   882  0071  00A4               	movwf	??_ISR+4
   883  0072  0824               	movf	??_ISR+4,w
   884  0073  0084               	movwf	4
   885  0074  1383               	bcf	3,7	;select IRP bank0
   886  0075  0800               	movf	0,w
   887  0076  202F               	fcall	i1fptable
   888  0077                     i1l873:
   889                           
   890                           ;main.c: 207:         if (OF_num_TMR1 == target_OF_num) {
   891  0077  1283               	bcf	3,5	;RP0=0, select bank0
   892  0078  0839               	movf	_target_OF_num+1,w
   893  0079  063D               	xorwf	_OF_num_TMR1+1,w
   894  007A  1D03               	skipz
   895  007B  287E               	goto	u18_25
   896  007C  0838               	movf	_target_OF_num,w
   897  007D  063C               	xorwf	_OF_num_TMR1,w
   898  007E                     u18_25:
   899  007E  1D03               	skipz
   900  007F  2881               	goto	u18_21
   901  0080  2882               	goto	u18_20
   902  0081                     u18_21:
   903  0081  2884               	goto	i1l879
   904  0082                     u18_20:
   905  0082                     i1l875:
   906                           
   907                           ;main.c: 208:             TMR1ON = 0;
   908  0082  1010               	bcf	16,0	;volatile
   909  0083                     i1l877:
   910                           
   911                           ;main.c: 209:             reset_all_pins();
   912  0083  2113               	fcall	i1_reset_all_pins
   913  0084                     i1l879:
   914                           
   915                           ;main.c: 223:         TMR1IF = 0;
   916  0084  1283               	bcf	3,5	;RP0=0, select bank0
   917  0085  100C               	bcf	12,0	;volatile
   918  0086                     i1l113:
   919  0086  0828               	movf	??_ISR+8,w
   920  0087  0827               	movf	??_ISR+7,w
   921  0088  008A               	movwf	10
   922  0089  0826               	movf	??_ISR+6,w
   923  008A  0084               	movwf	4
   924  008B  0E25               	swapf	??_ISR+5,w
   925  008C  0083               	movwf	3
   926  008D  0EDE               	swapf	btemp,f
   927  008E  0E5E               	swapf	btemp,w
   928  008F  0009               	retfie
   929  0090                     __end_of_ISR:
   930                           
   931                           	psect	intentry
   932  0004                     __pintentry:	
   933                           ;incstack = 0
   934                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   935                           
   936  0004                     interrupt_function:
   937  005E                     saved_w	set	btemp
   938  0004  00DE               	movwf	btemp
   939  0005  0E03               	swapf	3,w
   940  0006  1283               	bcf	3,5	;RP0=0, select bank0
   941  0007  00A5               	movwf	??_ISR+5
   942  0008  0804               	movf	4,w
   943  0009  00A6               	movwf	??_ISR+6
   944  000A  080A               	movf	10,w
   945  000B  00A7               	movwf	??_ISR+7
   946  000C  085F               	movf	btemp+1,w
   947  000D  00A8               	movwf	??_ISR+8
   948  000E  2839               	ljmp	_ISR
   949                           
   950                           	psect	text6
   951  0113                     __ptext6:	
   952 ;; *************** function i1_reset_all_pins *****************
   953 ;; Defined at:
   954 ;;		line 121 in file "main.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;		None
   957 ;; Auto vars:     Size  Location     Type
   958 ;;		None
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		None
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMMON   BANK0
   968 ;;      Params:         0       0
   969 ;;      Locals:         0       0
   970 ;;      Temps:          0       0
   971 ;;      Totals:         0       0
   972 ;;Total ram usage:        0 bytes
   973 ;; Hardware stack levels used: 1
   974 ;; This function calls:
   975 ;;		Nothing
   976 ;; This function is called by:
   977 ;;		_ISR
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981  0113                     i1_reset_all_pins:	
   982                           ;psect for function i1_reset_all_pins
   983                           
   984  0113                     i1l823:	
   985                           ;incstack = 0
   986                           ; Regs used in i1_reset_all_pins: []
   987                           
   988                           
   989                           ;main.c: 122:     GPIO0 = 0;
   990  0113  1283               	bcf	3,5	;RP0=0, select bank0
   991  0114  1005               	bcf	5,0	;volatile
   992                           
   993                           ;main.c: 123:     GPIO1 = 0;
   994  0115  1085               	bcf	5,1	;volatile
   995                           
   996                           ;main.c: 124:     GPIO2 = 0;
   997  0116  1105               	bcf	5,2	;volatile
   998                           
   999                           ;main.c: 125:     GPIO4 = 0;
  1000  0117  1205               	bcf	5,4	;volatile
  1001  0118                     i1l97:
  1002  0118  0008               	return
  1003  0119                     __end_ofi1_reset_all_pins:
  1004                           
  1005                           	psect	text7
  1006  011D                     __ptext7:	
  1007 ;; *************** function _odd_pins_clear_set *****************
  1008 ;; Defined at:
  1009 ;;		line 72 in file "main.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;		None
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;		None
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      void 
  1016 ;; Registers used:
  1017 ;;		None
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMMON   BANK0
  1023 ;;      Params:         0       0
  1024 ;;      Locals:         0       0
  1025 ;;      Temps:          0       0
  1026 ;;      Totals:         0       0
  1027 ;;Total ram usage:        0 bytes
  1028 ;; Hardware stack levels used: 1
  1029 ;; This function calls:
  1030 ;;		Nothing
  1031 ;; This function is called by:
  1032 ;;		_ISR
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036  011D                     _odd_pins_clear_set:	
  1037                           ;psect for function _odd_pins_clear_set
  1038                           
  1039  011D                     i1l805:	
  1040                           ;incstack = 0
  1041                           ; Regs used in _odd_pins_clear_set: []
  1042                           
  1043                           
  1044                           ;main.c: 73:     GPIO0 = 0;
  1045  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1046  011E  1005               	bcf	5,0	;volatile
  1047                           
  1048                           ;main.c: 74:     GPIO2 = 1;
  1049  011F  1505               	bsf	5,2	;volatile
  1050  0120                     i1l84:
  1051  0120  0008               	return
  1052  0121                     __end_of_odd_pins_clear_set:
  1053                           
  1054                           	psect	text8
  1055  0121                     __ptext8:	
  1056 ;; *************** function _even_pins_clear_set *****************
  1057 ;; Defined at:
  1058 ;;		line 62 in file "main.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		None
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0
  1072 ;;      Params:         0       0
  1073 ;;      Locals:         0       0
  1074 ;;      Temps:          0       0
  1075 ;;      Totals:         0       0
  1076 ;;Total ram usage:        0 bytes
  1077 ;; Hardware stack levels used: 1
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_ISR
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085  0121                     _even_pins_clear_set:	
  1086                           ;psect for function _even_pins_clear_set
  1087                           
  1088  0121                     i1l801:	
  1089                           ;incstack = 0
  1090                           ; Regs used in _even_pins_clear_set: []
  1091                           
  1092                           
  1093                           ;main.c: 63:     GPIO1 = 0;
  1094  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0122  1085               	bcf	5,1	;volatile
  1096                           
  1097                           ;main.c: 64:     GPIO4 = 1;
  1098  0123  1605               	bsf	5,4	;volatile
  1099  0124                     i1l78:
  1100  0124  0008               	return
  1101  0125                     __end_of_even_pins_clear_set:
  1102                           
  1103                           	psect	text9
  1104  0125                     __ptext9:	
  1105 ;; *************** function _even_pins_set_clear *****************
  1106 ;; Defined at:
  1107 ;;		line 57 in file "main.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		None
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMMON   BANK0
  1121 ;;      Params:         0       0
  1122 ;;      Locals:         0       0
  1123 ;;      Temps:          0       0
  1124 ;;      Totals:         0       0
  1125 ;;Total ram usage:        0 bytes
  1126 ;; Hardware stack levels used: 1
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_ISR
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134  0125                     _even_pins_set_clear:	
  1135                           ;psect for function _even_pins_set_clear
  1136                           
  1137  0125                     i1l799:	
  1138                           ;incstack = 0
  1139                           ; Regs used in _even_pins_set_clear: []
  1140                           
  1141                           
  1142                           ;main.c: 58:     GPIO1 = 1;
  1143  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1144  0126  1485               	bsf	5,1	;volatile
  1145                           
  1146                           ;main.c: 59:     GPIO4 = 0;
  1147  0127  1205               	bcf	5,4	;volatile
  1148  0128                     i1l75:
  1149  0128  0008               	return
  1150  0129                     __end_of_even_pins_set_clear:
  1151                           
  1152                           	psect	text10
  1153  0129                     __ptext10:	
  1154 ;; *************** function _odd_pins_set_clear *****************
  1155 ;; Defined at:
  1156 ;;		line 67 in file "main.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		None
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0
  1170 ;;      Params:         0       0
  1171 ;;      Locals:         0       0
  1172 ;;      Temps:          0       0
  1173 ;;      Totals:         0       0
  1174 ;;Total ram usage:        0 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_ISR
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183  0129                     _odd_pins_set_clear:	
  1184                           ;psect for function _odd_pins_set_clear
  1185                           
  1186  0129                     i1l803:	
  1187                           ;incstack = 0
  1188                           ; Regs used in _odd_pins_set_clear: []
  1189                           
  1190                           
  1191                           ;main.c: 68:     GPIO0 = 1;
  1192  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1193  012A  1405               	bsf	5,0	;volatile
  1194                           
  1195                           ;main.c: 69:     GPIO2 = 0;
  1196  012B  1105               	bcf	5,2	;volatile
  1197  012C                     i1l81:
  1198  012C  0008               	return
  1199  012D                     __end_of_odd_pins_set_clear:
  1200  000C                     
  1201                           	psect	functab
  1202  002E                     __pfunctab:
  1203  002E                     fptable:
  1204  002E  282E               	goto	fptable	;no entries
  1205  002F                     __i1fptable:
  1206  002F                     i1fptable:
  1207  002F  00DF               	movwf	(btemp+1)& (0+127)
  1208  0030  3000               	movlw	high i1fptable
  1209  0031  008A               	movwf	10
  1210  0032  085F               	movf	(btemp+1)& (0+127),w
  1211  0033  0782               	addwf	2,f
  1212  0034                     i1fpbase:
  1213  0034  2834               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  1214  0035                     fp__odd_pins_set_clear:
  1215  0035  2929               	ljmp	_odd_pins_set_clear
  1216  0036                     fp__even_pins_set_clear:
  1217  0036  2925               	ljmp	_even_pins_set_clear
  1218  0037                     fp__even_pins_clear_set:
  1219  0037  2921               	ljmp	_even_pins_clear_set
  1220  0038                     fp__odd_pins_clear_set:
  1221  0038  291D               	ljmp	_odd_pins_clear_set
  1222  0039                     __end_of__i1fptable:
  1223  005E                     btemp	set	94	;btemp
  1224  005E                     wtemp0	set	94
  1225                           
  1226                           	psect	idloc
  1227                           
  1228                           ;Config register IDLOC0 @ 0x2000
  1229                           ;	unspecified, using default values
  1230  2000                     	org	8192
  1231  2000  3FFF               	dw	16383
  1232                           
  1233                           ;Config register IDLOC1 @ 0x2001
  1234                           ;	unspecified, using default values
  1235  2001                     	org	8193
  1236  2001  3FFF               	dw	16383
  1237                           
  1238                           ;Config register IDLOC2 @ 0x2002
  1239                           ;	unspecified, using default values
  1240  2002                     	org	8194
  1241  2002  3FFF               	dw	16383
  1242                           
  1243                           ;Config register IDLOC3 @ 0x2003
  1244                           ;	unspecified, using default values
  1245  2003                     	org	8195
  1246  2003  3FFF               	dw	16383
  1247                           
  1248                           	psect	config
  1249                           
  1250                           ;Config register CONFIG @ 0x2007
  1251                           ;	Oscillator Selection bits
  1252                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  1253                           ;	Watchdog Timer Enable bit
  1254                           ;	WDTE = OFF, WDT disabled
  1255                           ;	Power-Up Timer Enable bit
  1256                           ;	PWRTE = ON, PWRT enabled
  1257                           ;	GP3/MCLR pin function select
  1258                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
  1259                           ;	Brown-out Detect Enable bit
  1260                           ;	BOREN = ON, BOD enabled
  1261                           ;	Code Protection bit
  1262                           ;	CP = OFF, Program Memory code protection is disabled
  1263                           ;	Data Code Protection bit
  1264                           ;	CPD = OFF, Data memory code protection is disabled
  1265  2007                     	org	8199
  1266  2007  31C4               	dw	12740

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     16      34

Pointer List with Targets:

    func_ptr	PTR FTN()void [2][2][2] size(1) Largest target is 1
		 -> odd_pins_clear_set(), odd_pins_set_clear(), even_pins_clear_set(), even_pins_set_clear(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_start_timer
    _start_timer->_update_current_position

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     174
                                             13 BANK0      3     3      0
                     _reset_all_pins
          _retrieve_current_position
                        _start_timer
 ---------------------------------------------------------------------------------
 (1) _start_timer                                          2     2      0     174
                                             11 BANK0      2     2      0
            _update_current_position
 ---------------------------------------------------------------------------------
 (2) _update_current_position                              2     0      2     174
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _retrieve_current_position                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _reset_all_pins                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  9     9      0       0
                                              0 BANK0      9     9      0
                _even_pins_clear_set *
                _even_pins_set_clear *
                 _odd_pins_clear_set *
                 _odd_pins_set_clear *
                   i1_reset_all_pins
 ---------------------------------------------------------------------------------
 (4) i1_reset_all_pins                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _odd_pins_set_clear                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _odd_pins_clear_set                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _even_pins_set_clear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _even_pins_clear_set                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _reset_all_pins
   _retrieve_current_position
   _start_timer
     _update_current_position

 _ISR (ROOT)
   _even_pins_clear_set *
   _even_pins_set_clear *
   _odd_pins_clear_set *
   _odd_pins_set_clear *
   i1_reset_all_pins *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               3E     10      22       4       54.8%
BITBANK0            3E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22       6        0.0%
ABS                  0      0      22       5        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Dec 13 15:10:29 2022

                                pc 0002                        _OF_num_TMR1 003C  
                               l72 010C                                 l91 00FC  
                               l69 011C                                 l97 0112  
                              l811 00DD                                l821 010D  
                              l813 00EB                                l815 00F4  
                              l807 00CE                                l831 009F  
                              l817 00F9                                l809 00D4  
                              l841 00AA                                l833 00A3  
                              l825 0090                                l819 00FB  
                              l851 00BD                                l843 00AB  
                              l835 00A4                                l827 0099  
                              l853 00BE                                l845 00AC  
                              l837 00A5                                l829 009B  
                              l855 00C7                                l847 00AE  
                              l839 00A6                                l857 00CB  
                              l849 00AF                                l795 0107  
                              l797 0119                                _GIE 005F  
                              u100 00D4                                u101 00D3  
                              u110 00C7                                u111 00C6  
                              _ISR 0039                                u197 00B6  
                              fsr0 0004                                indf 0000  
                      _start_timer 00CE                 _odd_pins_clear_set 011D  
                             ?_ISR 0020                               _ADON 00F8  
                             _PEIE 005E                               i1l81 012C  
                             i1l75 0128                               i1l84 0120  
                             i1l78 0124                               i1l97 0118  
                             _TMR1 000E                ?_odd_pins_clear_set 0020  
                             _main 0090                               btemp 005E  
                             start 000F                _even_pins_clear_set 0121  
                            ??_ISR 0020               ??_odd_pins_clear_set 0000  
  __end_of_update_current_position 010D                              ?_main 0020  
                            _GPIO0 0028                              _GPIO1 0029  
                            _GPIO2 002A                              _GPIO3 002B  
                            _GPIO4 002C                              _GPIO5 002D  
                            i1l113 0086                              i1l801 0121  
                            i1l803 0129                              i1l805 011D  
                            i1l823 0113                              i1l861 003D  
                            i1l871 005F                              i1l863 0041  
                            i1l873 0077                              i1l865 0047  
                            i1l875 0082                              i1l867 0051  
                            i1l859 0039                              i1l877 0083  
                            i1l869 0055                              i1l799 0125  
                            i1l879 0084                              u12_20 003D  
                            u12_21 003C                              u13_20 004D  
                            u13_21 004B                              u14_20 004E  
             ?_even_pins_clear_set 0020                              u15_20 005B  
                            u15_21 0059                              u16_20 005C  
                            u17_25 0062                              u18_20 0082  
                            u18_21 0081                              u18_25 007E  
               _odd_pins_set_clear 0129                              fpbase 0000  
                            pclath 000A                ?_odd_pins_set_clear 0020  
                            status 0003                              wtemp0 005E  
              _even_pins_set_clear 0125                    __initialization 0010  
                     __end_of_main 00CE               ??_odd_pins_set_clear 0000  
                           ??_main 002D              ??_even_pins_clear_set 0000  
             ?_even_pins_set_clear 0020        ??_retrieve_current_position 0000  
                       __i1fptable 002F                             _TMR1GE 0086  
                           _TMR1IE 0460                             _TMR1IF 0060  
                           _TMR1CS 0081                             _TMR1ON 0080  
                    _CW_CCW_select 0041              ??_even_pins_set_clear 0000  
                ?i1_reset_all_pins 0020                             fptable 002E  
                           fptotal 0000                             saved_w 005E  
               ??i1_reset_all_pins 0000            __end_of__initialization 002C  
                   __pcstackCOMMON 0000                       __pidataBANK0 00FD  
        _retrieve_current_position 0119                       ?_start_timer 0020  
                       __pbssBANK0 003A                         __pmaintext 0090  
                       __pintentry 0004                            _T1OSCEN 0083  
         ?_update_current_position 0029                            _TRISIO0 0428  
                          _TRISIO1 0429                            _TRISIO2 042A  
                          _TRISIO3 042B                            _TRISIO4 042C  
                          _TRISIO5 042D                            i1fpbase 0034  
                        _CMCONbits 0019                          _ANSELbits 009F  
                          __ptext1 00CE                            __ptext2 0107  
                          __ptext3 0119                            __ptext4 010D  
                          __ptext5 0039                            __ptext6 0113  
                          __ptext7 011D                            __ptext8 0121  
                          __ptext9 0125                __size_of__i1fptable 000A  
                        _T1CONbits 0010                     _reset_all_pins 010D  
             end_of_initialization 002C                 _set_clear_sequence 003F  
      __end_of_even_pins_clear_set 0125             __end_of_reset_all_pins 0113  
                 _current_position 003A        __end_of_even_pins_set_clear 0129  
                  ?_reset_all_pins 0020                start_initialization 0010  
                      __end_of_ISR 0090  __end_of_retrieve_current_position 011D  
                      __pdataBANK0 0030                 __end_of__i1fptable 0039  
                        ___latbits 0000                      __pcstackBANK0 0020  
                    _target_OF_num 0038                          __pfunctab 002E  
                interrupt_function 0004                   i1_reset_all_pins 0113  
       __end_of_odd_pins_clear_set 0121             fp__even_pins_clear_set 0037  
                         i1fptable 002F                           i1fptotal 000C  
                 ??_reset_all_pins 0000         __end_of_odd_pins_set_clear 012D  
     update_current_position@value 0029                      ??_start_timer 002B  
           fp__even_pins_set_clear 0036                        _pair_select 0040  
                         __ptext10 0129             _tmp_set_clear_sequence 003E  
                         _func_ptr 0030            _update_current_position 0107  
            fp__odd_pins_clear_set 0038                __end_of_start_timer 00FD  
                         intlevel1 002E         ?_retrieve_current_position 0020  
            fp__odd_pins_set_clear 0035           __end_ofi1_reset_all_pins 0119  
        ??_update_current_position 0000  
